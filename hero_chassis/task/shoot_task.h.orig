#ifndef SHOOTTASKH
#define SHOOTTASKH
#include "main.h"

typedef enum
{
	SHOOT_NORMAL       =  0,//射击模式选择,默认不动
	SHOOT_SINGLE       =  1,//单发
	SHOOT_TRIPLE       =  2,//三连发
	SHOOT_HIGHTF_LOWS  =  3,//高射频低射速
	SHOOT_MIDF_HIGHTS  =  4,//中射频高射速
	SHOOT_BUFF         =  5,//打符模式
	SHOOT_AUTO         =  6,//自瞄自动射击
  RELAX              =  7,
}eShootAction;
extern eShootAction actShoot;

typedef enum  //发射状态
{
	UNSTART = 0,
	START = 1,
	FINISH = 2,
}eShootState;
extern eShootState ShootState;

//void GetEnvironmentShootMode(void);
static void RemoteShoot(void);
static void Limit_something(void);
/*******************键盘模式******************************/
				static void REVOLVER_Key_Ctrl(void);  //拨盘的键盘选择模式

	   /******拨盘键盘模式各类模式小函数*******/
				static void SHOOT_Mode_Choose(void);
				//void SHOOT_SINGLE_Ctrl(void);
				//void SHOOT_TRIPLE_Ctrl(void);
				//void SHOOT_HIGHTF_LOWS_Ctrl(void);
				//void SHOOT_MIDF_HIGHTS_Ctrl(void);
				//void SHOOT_AUTO_Ctrl(void);

				//void REVOLVER_KeySpeedCtrl(void);   //键盘模式拨盘速度环控制    
				//void REVOLVER_KeyPosiCtrl(void);  //键盘模式拨盘位置环控制      /***核心发射函数***/


	  /****拨盘电机数据更新,CAN2中断中调用****/
				//void REVOLVER_UpdateMotorAngle(void);
				//void REVOLVER_UpdateMotorSpeed( int16_t speed );
				//void REVOL_UpdateMotorAngleSum( void );

		 /*****PID控制*******/
				//void REVOL_SpeedLoop( void );     //速度环
				//void REVOL_PositionLoop( void );  //位置环

			/****卡弹处理*****/
				static void REVOL_SpeedStuck(void);
				//void REVOL_PositStuck(void);

			/******射频热量限制******/
			bool Revolver_Heat_Limit(void);

			/*************************************/
				//void REVOLVER_StopMotor(void);      //拨盘失控保护
				static void REVOLVER_InitArgument(void);   //拨盘参数初始化
			void REVOLVER_Rest(void);            //发弹清零,哪怕鼠标继续点击也不给发弹
				//void Revolver_Angle_Rest(void);   //拨盘角度清零
#endif

